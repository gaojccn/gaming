group 'com.gaojc'
version '1.0.0-SNAPSHOT'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: "maven"
apply plugin: "war"
apply plugin: 'jetty'

sourceCompatibility = 1.7
compileJava.options.encoding = 'UTF-8'
compileJava.options.compilerArgs = ["-Xlint:unchecked", "-Xlint:deprecation"]

compileTestJava.options.encoding = 'UTF-8'
compileTestJava.options.compilerArgs = ["-Xlint:unchecked", "-Xlint:deprecation"]

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"

        }
    }
}
repositories {
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    mavenCentral()
}


project.ext {
    versionFile = file('version.properties')
    jettyVersion = "9.3.0.M2"
    jettyArtifacts = [
            "jetty-server",
            "jetty-webapp",
            "jetty-jndi",
            "jetty-plus",
            "jetty-start"
    ]

    springVersion = "3.1.2.RELEASE"
    springArtifacts = [
            "spring-core",
            "spring-beans",
    ]
    restAssuredVersion = '3.0.2'
}

dependencies {
    springArtifacts.each { artifact ->
        compile "org.springframework:$artifact:$springVersion"
    }
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'ch.qos.logback:logback-core:1.1.3'
    compile 'ch.qos.logback:logback-access:1.1.3'

    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.46'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'

    jettyArtifacts.each { artifact ->
        providedRuntime "org.eclipse.jetty:$artifact:$jettyVersion"
    }

    testCompile group: 'junit', name: 'junit', version: '4.12'
    providedCompile 'javax.servlet:servlet-api:2.5' // 编译期
}

class ProjectVersion {
    Integer major
    Integer minor
    Integer bugfix
    Boolean release

    ProjectVersion(Integer major, Integer minor, Integer bugfix) {
        this.major = major
        this.minor = minor
        this.bugfix = bugfix
        this.release = Boolean.FALSE
    }

    ProjectVersion(Integer major, Integer minor, Integer bugfix, Boolean release) {
        this.major = major
        this.minor = minor
        this.bugfix = bugfix
        this.release = release
    }

    @Override
    String toString() {
        "$major.$minor.$bugfix${release ? '' : '-SNAPSHOT'}"
    }
}

task printVersion {
    doLast {
        logger.quiet("version:$version")
    }
}
task loadVersion {
    project.version = readVersion()
}

def isRelease() {
    ProjectVersion projectVersion = readVersion()
    projectVersion.release
}

ProjectVersion readVersion() {
    logger.quiet('Reading the version file.')
    if (!versionFile.exists()) {
        throw new GradleException("Required version file does not exists:$versionFile.canonicalPath")
    }
    Properties versionProps = new Properties()
    versionFile.withInputStream { stream ->
        versionProps.load(stream)
    }
    new ProjectVersion(versionProps.major.toInteger(), versionProps.minor.toInteger(), versionProps.bugfix.toInteger(), versionProps.release.toBoolean())
}

task writeVersionFile << {
    def versionFilePath = 'version.json'
    File file = new File(versionFilePath)
    if (!file.exists()) file.createNewFile()

    def versionFile = new File(versionFilePath)
    versionFile.text = '{"version":"' + version + '"}'
}

uploadArchives {
    dependsOn build
    configuration = configurations.archives
    repositories.mavenDeployer {
        repository(url: 'http://192.168.35.26:8081/nexus/content/repositories/releases/') {
            authentication(userName: "admin", password: "admin123")
        }

        snapshotRepository(url: 'http://192.168.35.26:8081/nexus/content/repositories/snapshots/') {
            authentication(userName: "admin", password: "admin123")
        }

        pom.project {
            name 'gaojc'
            packaging 'war'
            description 'none'
//            url 'http://192.168.35.26:8081/nexus/content/repositories/releases/'
            url 'http://192.168.35.26:8081/nexus/content/repositories/snapshots/'
            groupId "com.gaojc"
            artifactId "gaming"
            version version
        }
    }
}

processResources {
    dependsOn writeVersionFile
}

war {
    baseName = 'gaming'
    version version
    manifest {
        attributes 'Implementation-Title': 'gaming',
                'Implementation-Version': version,
                'Created-By': 'gaojc'
    }
}

jettyRun {
    httpPort 8081
    [jettyRun, jettyRunWar, jettyStop]*.stopPort = 9965
    [jettyRun, jettyRunWar, jettyStop]*.stopKey = 'stopKey'
}
task makeReleaseVersion(group: 'versioning', description: 'Makes project a release version.') << {
    ant.propertyfile(file: versionFile) {
        entry(key: 'release', type: 'string', operation: '=', value: 'true')
    }
}